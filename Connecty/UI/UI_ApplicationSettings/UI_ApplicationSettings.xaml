<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Connecty"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        x:Class="Connecty.UI_ApplicationSettings"
        mc:Ignorable="d"
        Title="Connecty Einstellungen"
        SizeToContent="WidthAndHeight"
        MinWidth="200"
        MinHeight="100"
        ResizeMode="NoResize" 
        Icon="/Connecty;component/Resources/ConnectyIcon.ico"
        Background="{DynamicResource MainBackground}"
        KeyDown="Window_KeyDown"
        Loaded="Window_Loaded">

    <Window.Resources>

        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border 
                                x:Name="Border"
                                Margin="0,0,-4,0" 
                                Background="{DynamicResource MainBackground}"
                                BorderBrush="{StaticResource MainBackground}" 
                                BorderThickness="1,1,1,1" 
                                CornerRadius="0,0,0,0" >
                                <ContentPresenter x:Name="ContentSite"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    ContentSource="Header"
                                    Margin="12,2,12,2"
                                    RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuBackground}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource MainBackground}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource MenuBackground}" />
                                <Setter Property="Foreground" Value="{DynamicResource MenuBackground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--
        <ControlTemplate x:Key="ComboBoxControlTemplate1" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="ClickMode" Value="Press"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border x:Name="templateRoot" BorderBrush="#FFACACAC" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                    <GradientStop Color="#FFF0F0F0" Offset="0"/>
                                                    <GradientStop Color="#FFE5E5E5" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FF606060" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                            </Border>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                            </MultiDataTrigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                            </Trigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" TargetName="templateRoot">
                                                    <Setter.Value>
                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                            <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>
                                                <Setter Property="Background" TargetName="splitBorder">
                                                    <Setter.Value>
                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                            <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF7EB4EA"/>
                                            </MultiDataTrigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                            </Trigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" TargetName="templateRoot">
                                                    <Setter.Value>
                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                            <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF569DE5"/>
                                                <Setter Property="Background" TargetName="splitBorder">
                                                    <Setter.Value>
                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                            <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="#FF569DE5"/>
                                            </MultiDataTrigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Fill" TargetName="Arrow" Value="#FFBFBFBF"/>
                                            </Trigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" TargetName="templateRoot" Value="#FFF0F0F0"/>
                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFD9D9D9"/>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>
                                            </MultiDataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="False">
                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="True"/>
                        <Condition>
                            <Condition.Value>
                                <System:Boolean>False</System:Boolean>
                            </Condition.Value>
                        </Condition>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                </MultiTrigger>
                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        -->
    </Window.Resources>

    <Grid>
        <StackPanel Orientation="Vertical">

            <TabControl TabStripPlacement="Left" BorderBrush="{DynamicResource MainBackground}" Background="{DynamicResource MenuBackground}">
                <TabItem Header="Allgemein" 
                         Background="{DynamicResource MainBackground}" 
                         Foreground="{DynamicResource MainForeground}">

                    <Grid Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        
                        <!-- Row 0 Buffer Settings -->
                        <Label Foreground="{DynamicResource MainForeground}" 
                               Content="Puffer Einstellungen"
                               Margin="0,10,0,0"
                               HorizontalAlignment="Left"
                               Grid.Column="0"
                               Grid.Row="0"
                               Grid.ColumnSpan="2"/>

                        <!-- Row 1 Telegram Buffer Size -->
                        <Label Content="Telegramm Puffergröße"
                               Foreground="{DynamicResource MainForeground}" 
                               HorizontalAlignment="Right"
                               Grid.Column="0"
                               Grid.Row="1"/>
                        <TextBox x:Name="tbMsgLogBufferSize"     
                                 Width="80" 
                                 HorizontalAlignment="Left"
                                 TextChanged="textBox_TextChanged"
                                 Grid.Column="1"
                                 Grid.Row="1"/>
                        
                        <!-- Row 2 Send History Buffer -->
                        <Label Foreground="{DynamicResource MainForeground}"
                               Content="Sende Historiegröße"
                               HorizontalAlignment="Right"
                               Grid.Column="0"
                               Grid.Row="2"/>
                        <TextBox x:Name="tbSendHistoryBufferSize" 
                                 Width="80"
                                 HorizontalAlignment="Left"
                                 TextChanged="textBox_TextChanged"
                                 Grid.Column="1"
                                 Grid.Row="2"/>

                        <!-- Row 3 Mode Settings -->
                        <Label Content="Modis"
                               Margin="0,10,0,0"
                               Foreground="{DynamicResource MainForeground}"
                               HorizontalAlignment="Left"
                               Grid.Column="0"
                               Grid.Row="3"
                               Grid.ColumnSpan="2"/>
                        
                        <!-- Row 4 Expert Setting -->
                        <Label Content="Experten Modus"
                               Foreground="{DynamicResource MainForeground}"
                               HorizontalAlignment="Right"
                               Grid.Column="0"
                               Grid.Row="4"/>
                        <CheckBox x:Name="cbExpertModeState" 
                                  VerticalAlignment="Center" 
                                  Click="cbExpertMode_Click"
                                  Grid.Column="1"
                                  Grid.Row="4"/>

                        <!-- Row 5 Debug Setting -->
                        <Label Content="Debug Modus"    
                               Foreground="{DynamicResource MainForeground}" 
                               HorizontalAlignment="Right"
                               Grid.Column="0"
                               Grid.Row="5"/>
                        <CheckBox x:Name="cbDebugModeState"     
                                  VerticalAlignment="Center"     
                                  Click="cbDebugModeState_Click"
                                  Grid.Column="1"
                                  Grid.Row="5"/>

                    </Grid>

                </TabItem>
                <TabItem Header="Darstellung" 
                         Background="{DynamicResource MainBackground}" 
                         Foreground="{DynamicResource MainForeground}">

                    <Grid Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>


                        <!-- ROW 0 General UI Settings-->
                        <Label Content="Generell"
                               Margin="0,10,0,0"
                               Foreground="{DynamicResource MainForeground}" 
                               HorizontalAlignment="Left"
                               Grid.Column="0"
                               Grid.Row="0"
                               Grid.ColumnSpan="2"/>


                        <!-- Row 1 UI Selection -->
                        <Label Foreground="{DynamicResource MainForeground}" 
                               Content="UI Theme"
                               HorizontalAlignment="Right"
                               Grid.Column="0"
                               Grid.Row="1"/>
                        <ComboBox x:Name="cbThemeSelection" 
                                  Width="140" 
                                  HorizontalAlignment="Left"
                                  SelectionChanged="cbThemeSelection_SelectionChanged"
                                  Grid.Column="1"
                                  Grid.Row="1"/>

                        <!-- Row 2 Special an Non Ascii Char Settings -->       
                        <Label Content="Spezial und keine ASCII Zeichen"    
                               Foreground="{DynamicResource MainForeground}"
                               Margin="0,10,0,0"
                               HorizontalAlignment="Left"
                               Grid.Column="0"
                               Grid.Row="2"
                               Grid.ColumnSpan="2"/>


                        <!-- Row 3 Italic Setting -->
                        <Label Content="Kursiv"    
                               Foreground="{DynamicResource MainForeground}"
                               HorizontalAlignment="Right"
                               Grid.Column="0"
                               Grid.Row="3"/>
                        <CheckBox x:Name="cbSpecialCharItalic"    
                                  VerticalAlignment="Center"    
                                  Click="cbSpecialCharItalic_Click"
                                  Grid.Column="1"
                                  Grid.Row="3"/>

                        <!-- Row 4 Bold Settig -->
                        <Label Content="Fett"    
                               Foreground="{DynamicResource MainForeground}"
                               HorizontalAlignment="Right"
                               Grid.Column="0"
                               Grid.Row="4"/>
                        <CheckBox x:Name="cbSpecialCharBold"    
                                  VerticalAlignment="Center"
                                  Click="cbSpecialCharBold_Click"
                                  Grid.Column="1"
                                  Grid.Row="4"/>


                        <!-- Row 5 Color Change Setting -->
                        <Label Content="Farbe ändern"    
                               Foreground="{DynamicResource MainForeground}"
                               HorizontalAlignment="Right"
                               Grid.Column="0"
                               Grid.Row="5"/>
                        <CheckBox x:Name="cbSpecialCharChangeColor"    
                                  VerticalAlignment="Center"    
                                  Click="cbSpecialCharChangeColor_Click"
                                  Grid.Column="1"
                                  Grid.Row="5"/>

                    </Grid>

                </TabItem>
            </TabControl>

            <!-- Accept or Decline -->
            <StackPanel HorizontalAlignment="Right" VerticalAlignment="Bottom" Orientation="Horizontal" Margin="0,20,0,0">
                <Button     x:Name="bAccept" 
                            Margin="5,0,5,5" 
                            Content="Übernehmen" 
                            HorizontalAlignment="Right" 
                            Width="78"  
                            Height="25" 
                            VerticalAlignment="Bottom" 
                            Click="bAccept_Click"
                            TabIndex="10"/>
                <Button     x:Name="bCancel" 
                            Margin="0,0,5,5" 
                            Content="Abbrechen" 
                            HorizontalAlignment="Right" 
                            Width="78"  
                            Height="25" 
                            VerticalAlignment="Bottom" 
                            Click="bCancel_Click" 
                            TabIndex="12"/>
            </StackPanel>
        </StackPanel>
    </Grid>
</Window>
